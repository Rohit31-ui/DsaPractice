import java.util.*;

public class FindMinimumInRotated{
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }

        int min=FindMin(arr);

        System.out.println(min);
    }

    public static int FindMin(int[] arr){
        int n=arr.length;
        int left=0,right=n-1;
        int min=arr[0];
        while(left<=right){
            if(arr[left]<arr[right] ){
                min=Math.min(min,arr[left]);
                break;
            }
            int mid=left+(right-left)/2;

            min=Math.min(mid,arr[mid]);

            if(arr[mid]>=arr[left]){
                left=mid+1;
            }
            else{
                right=mid-1;
            }


        }

        return min;
    }


}

/*

In this question they have given an rotated sorted array and our task is to find minimum for that array in O(logn) time
As array is sorted we can apply binary search 
And search for minimum element from the given array


/*
