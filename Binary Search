import java.util.*;

public class BinarySearch{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];

        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }

        int target=sc.nextInt();

        int ans=search(arr,target);
        System.out.println(ans);
    }

    public static int search(int[] arr,int target){
        int n=arr.length;
        int left=0,right=n-1;

        while(left<=right){
            int mid=left+(right-left)/2;

            if(arr[mid]==target) return mid;
            else if(arr[mid]>target) left=mid+1;
            else right=mid-1;
        }

        return -1;
    }
}

/*
Binary Search-  Most optimal searching algorthm
works only on a sorted array

time complexity-O(logn) and space -O(1)
*/
