import java.util.*;

public class SearchInRoated{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int target=sc.nextInt();
        int ans=Search(arr,target);

        System.out.println(ans);

    }

    public static int Search(int[] arr,int target){
        int n=arr.length;
        int left=0,right=n-1;

        while(left<=right){
            int mid=left+(right-left)/2;

            if(arr[mid]==target) return mid;

            if(arr[left]<=arr[mid]){
                if(arr[left]<=target && target<arr[mid]){
                    right=mid-1;
                }
                else{
                    left=mid+1;
                }
            }
            else{
                if(arr[mid]<=target && target< arr[right]){
                   left=mid+1;
                   
                }
                else{
                    right=mid-1;
                }
            }
        }

        return -1;
    }
}


/*
in this question they have given a sorted rotated array and we have to search target in it
as array is sorted we can aaply binary search
*/
